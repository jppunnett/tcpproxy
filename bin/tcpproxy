#!/usr/bin/env ruby

require 'optparse'
require 'methadone'
require 'tcpproxy.rb'

class App
  include Methadone::Main
  include Methadone::CLILogging

  main do |endpoint|
    server = Tcpproxy::ProxyServer.new(options['local-port'], endpoint)
    server.start.join
  end

  # supplemental methods here

  # Declare command-line interface here

  description "Spies on TCP traffic between two hosts"

  # Flag defaults
  options['local-port'] = Tcpproxy::DEFAULT_LISTEN_PORT

  # Accept flags via:
  on("-p PORT", "--local-port", "Port that tcpproxy listens on for incoming connections", Integer)
  # options[flag] will contain VAL

  # Specify switches via:
  # on("--[no-]switch","Some switch")
  #
  # Or, just call OptionParser methods on opts

  # Require an argument
  #   TODO: Check if endpoint matches hostname|ip followed by a ":" and port.  
  arg :endpoint, "Host name and port of remote service. E.g. google.com:80" 
  #
  # # Make an argument optional
  # arg :optional_arg, :optional

  version Tcpproxy::VERSION

  use_log_level_option

  go!
end
